# Generated by Django 2.1.2 on 2018-10-27 22:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Last name')),
                ('reg_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('staff_status', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Un select this instead of deleting accounts.', verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('group_type', models.CharField(choices=[('person', 'Person'), ('per_group', 'Person Group')], max_length=15, verbose_name='Group Type')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('address', models.CharField(max_length=250, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=40, null=True, verbose_name='Phone')),
                ('website', models.CharField(blank=True, max_length=60, null=True, verbose_name='Web site')),
                ('zipcode', models.CharField(blank=True, max_length=40, null=True, verbose_name='Zip code')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='person/image', verbose_name='Profile Picture')),
                ('work_internship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Work Internship')),
                ('certificate', models.FileField(blank=True, null=True, upload_to='person/certificate', verbose_name='Certificate')),
                ('presentation', models.FileField(blank=True, null=True, upload_to='person/presentation', verbose_name='Presentation')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
    ]
